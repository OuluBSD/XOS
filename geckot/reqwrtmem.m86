	.TITLE	$_reqwrtmem

;*--------------------------------------------------------------------------*
;* reqwrtmem.m86
;*
;* Written by: John Goltz
;*
;* Edit History:
;*
;*--------------------------------------------------------------------------*

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	xosinc:\xmac\xos.par
	.INCLUD	xosinc:\xmac\xosx.par
	.INCLUD	xosinc:\xmac\xoserr.par
	.INCLUD	geckot.par

	GTCODE

;************************************************
; Function: reqwrtmem - Handle the WRTMEM request
; Returned: Nothing
;************************************************

;Request format:
;  Offset Size Description
;     0     1  Item size: 0=byte, 1=word, 2=long, 3=quad
;     1     4  Memory address
;     5     n  Data to write

;Response format:
;  Offset Size Description
;     0     1  Item size (echoed)

	.ENTRY	$_reqwrtmem
$_reqwrtmem::
	MOVL	EAX, $_reqlength#
	SUBL	EAX, #5
	JLE	$_badlength#
	MOVL	EAX, $_reqlength#
	SUBL	EAX, #5
	MOVZBL	ECX, $_dbbufr#+0
	PUSHL	ECX			;Item size
	PUSHL	$_dbbufr#+1		;Address to write
	PUSHL	#$_dbbufr#+5		;Address of data
	PUSHL	EAX			;Number of items to write
	CALL	$_wrtmem#		;Write memory
4$:	PUSHL	#DBRQ_WRTMEM
	PUSHL	#1
	CALL	$_sendresponse#
	RET

;Here if protected mode segment selector specified - this is not supported yet!

10$:	CLRL	EAX
	JMP	4$

	END
