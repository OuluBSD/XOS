	.TITLE	strcmpcs - ANSI C function to compare two counted strings
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

.MACRO	MOVSEG	dst, src, reg
.IF	NB	{reg}
	MOVL	reg, src
	MOVL	dst, reg
.IFF
	PUSHL	src
	POPL	dst
.ENDC
.ENDM

	.SBTTL	strcmpcs - Function to compare two counted strings


;	int value = strcmpcs(
;		char *str1,	// Pointer to first string
;		int   len1,	// Length of first string
;		char *str2,	// Pointer to second string
;		int   lne2);	// Length of second string
;       Value returned is the Difference of 1st non-equal character (0
;	  if match)

str1=!12t
len1=!16t
str2=!20t
len2=!24t

	.PSECT	_TEXT_p

	.ENTRY	strcmpcs
strcmpcs:
	PUSHL	ESI
	PUSHL	EDI
	MOVL	EAX, DS
	MOVL	ES, EAX
	CLD

	MOVL	ESI, str1[ESP]		;Get offset of first string
	MOVL	EDI, str2[ESP]		;Get offset of second string
	MOVL	ECX, len1[ESP]		;Get length of first string
	CMPL	ECX, len2[ESP]
	JLE	2$
	MOVL	ECX, len2[ESP]
2$:	TESTL	ECX, ECX
	JE	6$			;If at least one string is 0 length	
	RECMPSB	[EDI], [ESI]		;Compare the strings
	JB	below
	JA	above

;Here if the common parts are equal

6$:	MOVL	EAX, len1[ESP]
	CMPL	EAX, len2[ESP]
	JE	equal
	JB	below
above:	MOVL	EAX, #1
	JMP	done

below:	MOVL	EAX, #-1
	JMP	done

equal:	CLRL	EAX
done:	POPL	EDI
	POPL	ESI
	RET

	.END
