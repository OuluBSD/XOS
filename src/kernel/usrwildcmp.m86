	.TITLE	usrwildcmp - User mode wild card string routines for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\xmac\xos.par
	.INCLUD	XOSINC:\xmac\xosx.par
	.INCLUD	XOSINC:\xmac\xoserr.par

	USERCODE

;Function to do wild card compare using ASCII 8-bit characters
;	XOSCALL sysLibWildCmp8(
;	    long   case,	// 0 for mixed case match, 1 for exact case
;				//   match
;	    cchar *str1,	// Address of first string (may contain wild
;				//   card characters)
;	    cchar *str2);
;  Value returned is 0 if match, positive if no match or a negative XOS error
;    code if error.

wc_case=!24t
wc_str1=!20t
wc_str2=!16t

sysLibWildCmp8::
	PUSHL	EDI
	PUSHL	ESI
	ENTER	0
	MOVL	ESI, wc_str1[EBP]
	MOVL	EDI, wc_str2[EBP]
	CLD
2$:	CALL	cmpstr8			;Compare strings
	JNC	14$			;If have complete match
	JNE	12$			;If match not possible
4$:	MOVZBL	EAX, [ESI]		;Here with *
6$:	MOVZBL	EDX, [EDI]		;Scan to first match
	INCL	EDI
	CMPB	DL, AL
	JE	16$			;If match
	CMPB	wc_case[EBP], #0	;Want exact case match?
	JNE	10$			;Yes
	XORL	EAX, EDX		;No - might be different case match?
	TESTB	AL, #~0x20
	JNE	8$			;No
	XORL	EAX, EDX		;Yes
	BTL	ltrtbl, EAX		;Is it a letter?
	JC	16$			;Yes - match
	JMP	10$			;No - not match

8$:	XORL	EAX, EDX
10$:	TESTL	EDX, EDX		;Not match - end?
	JNE	6$			;No - continue
12$:	MOVL	EAX, #1			;No match - return 1
14$:	LEAVE				;And return
	POPL	ESI
	POPL	EDI
	RET	12t

;Here with match after *

16$:	TESTB	AL, AL			;Found match if end of string here
	JE	14$
	MOVL	wc_str1[EBP], ESI	;Save state
	MOVL	wc_str2[EBP], EDI
	INCL	ESI
	CALL	cmpstr8			;Compare strings
	JNC	14$			;If have complete match
	JE	4$			;If found another *
	MOVL	EDI, wc_str2[EBP]	;Match not possible here - advance one
	MOVL	ESI, wc_str1[EBP]	;  character and try to match that
					;  string
	JMP	4$			;Continue
.PAGE
;Subroutine to compare strings (string 1 may contain wild characters) up to
;  wild card character
;	c{SS:ESI} = Pointer to string 1
;	c{ES:EDI} = Pointer to string 2
;	CALL	cmpstr8
;	C:clr,Z:set = Complete match
;	C:set,Z:set = * encountered
;	C:set,Z:clr = No match possible

cmpstr8:MOVZBL	EAX, [ESI]		;Anything left in string 1?
	INCL	ESI
	CMPB	AL, #0
	JNE	6$			;Yes
	CMPB	[EDI], #0		;No - anything left in string 2?
	JE	4$			;No - have complete match
2$:	TESTL	ESP, ESP		;Yes - make sure Z is clear to indicate
					;  no possible match
	STC				;And set C
4$:	RET

;Here with more in string 2 to check

6$:	CMPB	AL, #'*'		;Another wild character?
	JE	18$			;Yes
	CMPB	AL, #'?'		;No - match any single character?
	JE	12$			;Yes
8$:	CMPB	[EDI], #0		;No - end of string 2?
	JE	2$			;Yes - go check some more
	MOVZBL	EDX, [EDI]		;No - compare
	INCL	EDI
	CMPB	DL, AL
	JE	cmpstr8			;If exact match
	CMPB	wc_case[EBP], #0	;Want exact case match?
	JNE	2$			;Yes
	XORL	EDX, EAX		;No - might be different case match?
	TESTB	DL, #~0x20
	JNE	2$			;No
	BTL	ltrtbl, EAX		;Yes - is it a letter?
	JC	cmpstr8			;Yes - match
	JMP	2$			;No - not match

;Here with ? in string 1

12$:	CMPB	[EDI], #0		;End of string 2?
	JE	cmpstr8			;Yes - continue
16$:	INCL	EDI
	JMP	cmpstr8			;And continue

;Here with * in string 1

18$:	CLRL	EAX			;Indicate have *
	STC
	RET
.PAGE
	.MOD	4
ltrtbl:	.LONG	0x00000000
	.LONG	0x00000000
	.LONG	0x07FFFFFE
	.LONG	0x07FFFFFE
	.LONG	0x00000000
	.LONG	0x00000000
	.LONG	0x00000000
	.LONG	0x00000000

	END
