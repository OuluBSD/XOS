 	.TITLE	bootblk - Minimal boot block used when initializing a file structure

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;This is a trivial boot block that is used when formatting a disk or partition.
;  If a attempt is make to boot the disk or partition an error message is
;  displayed.

	.PROC	80386
	.STK16

	.INCLUD	XOSINC:\xmac\xos.par
	.INCLUD	XOSINC:\xmac\xosx.par
	.INCLUD	XOSINC:\xmac\xosrun.par
	.INCLUD XOSINC:\xmac\xosdisk.par
	.INCLUD	XOSINC:\xmac\xosxdisk.par
	.INCLUD XOSINC:\xmac\xosxffs.par

	.SEG	boot_s, DATA, READ, WRITE, 16BIT
	.MSECT	boot_m, boot_s, ADDR=0x7C00
	.PSECT	boot_p, boot_m

bootbgn:JMP	begin.s
	NOP
	.ASCII	"XOS v4  "
	.WORD	512t
$=db_backboot
	.WORD	0xFFFF
$=db_32drive
	.BYTE	0x80
$=db_32extsig
	.BYTE	0x29
$=db_32sysid
	.ASCII	"FAT32   "
$=db_xosdrive
	.BYTE	0xC0

$=db_btcode
begin:	CLRW	AX
	MOVW	DS, AX
	MOVW	SI, #errmsg		;Not there - get message
	CLD
2$:	LODSB	[SI]			;Get character
	CMPB	AL, #0			;End of message?
	JE	4$			;Yes
	MOVB	AH, #0x0E		;No - display character
	CLRW	BX
	INT	0x10
	JMP	2$			;Continue

4$:	MOVB	AH, #0			;Wait for a key
	INT	0x16
	MOVB	AL, #0xFE		;Reset everything
	OUTB	0x64
	JMP	$			;Should never get here

;	c[AX] = Value to display
.IF NE 0
puthex:	PUSHW	DS
	MOVW	CX, #4
30$:	ROLW	AX, #4
	PUSHW	AX
	PUSHW	CX
	ANDB	AL, #0x0F
	CMPB	AL, #9
	JBE	32$
	ADDB	AL, #'A'-'0'-10t
32$:	ADDB	AL, #'0'
	MOVB	AH, #0x0E		;Display character
	CLRW	BX
	INT	0x10
	POPW	CX
	POPW	AX
	LOOP	CX, 30$

	MOVW	AX, #0x0E00+' '		;Display space
	CLRW	BX
	INT	0x10

	POPW	DS
	RET
.ENDC

errmsg:	.ASCII	{0x0D,0x0A}"? Not a bootable disk - replace disk and press "
	.ASCIZ	"any key to reboot"{0x0D,0x0A}

$=db_bootsig
	.WORD	0xAA55
