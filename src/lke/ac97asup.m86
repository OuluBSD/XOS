	.TITLE	AC97ASUP - Support routines for AC97 codecs

;*--------------------------------------------------------------------------*
;* AC97ASUP.M86
;*
;* Written by: John R. Goltz
;*
;* Edit History:
;*
;*--------------------------------------------------------------------------*

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSDOS.PAR
	.INCLUD	XOSINC:\XMAC\PCAT.PAR
	.INCLUD	XOSINC:\XMAC\XOSLKE.PAR
	.INCLUD	XOSINC:\XMAC\XOSXLKE.PAR
	.INCLUD	XOSINC:\XMAC\XOSXAC97.PAR

MAJV   =!1t
MINV   =!0t
EDITNUM=!0t

	LKEHEAD	AC97ASUP, MAJV, MINV, EDITNUM, LKETYPE_SUPPORT

	.EXPORT	xosa97Init

	CODE

	.SBTTL	Initialization routine

	INITSUB	ac97ainit

ac97ainit:
	MOVL	ECX, #codetop
	CLRL	EDX
	CLRL	EAX
	MOVL	EBX, #QSTS$DONE
	RET

	CODE
.PAGE
	.SBTTL	xosa97Init

;Function to initialize the AC97 codec
;	long xosa97Init(
;	  DCB    *dcb,		// Address of DCB of device using codec
;	  AC97DB *ac97)		// Address of AC97DB
;  Value returned is 1 if codec is present and 0 if not

icdc_dcb =!20t
icdc_ac97=!16t

$$$=!0
FRM pcdc_id1, 4t
FRM pcdc_id2, 4t
icdc_SIZE=!$$$

xosa97Init::
	PUSHL	EDI
	PUSHL	ESI
	ENTER 	icdc_SIZE, 0
	MOVL	EDI, icdc_dcb[EBP]
	MOVL	ESI, icdc_ac97[EBP]
	
;Initialize the codec

	PUSHL	EDI
	PUSHL	#AC97_RESET
	PUSHL	#0
	CALLI	ac97db_write[ESI]
	PUSHL	EDI
	CALLI	ac97db_wait[ESI]

;Do a quick existance check by checking bit 15 of codec register 0 which
;  should always be 0

	PUSHL	EDI
	PUSHL	#AC97_RESET
	CALLI	ac97db_read[ESI]
	TESTL	EAX, #0x8000
	JE	4$
notthere:
	CLRL	EAX
	LEAVE
	POPL	ESI
	POPL	EDI
	RET	8t

;Get and save the codec vendor code

4$:	PUSHL	EDI
	PUSHL	#AC97_VENDOR_ID1
	CALLI	ac97db_read[ESI]
	MOVL	pcdc_id1[EBP], EAX
	PUSHL	EDI
	PUSHL	#AC97_VENDOR_ID2
	CALLI	ac97db_read[ESI]
	MOVL	pcdc_id2[EBP], EAX
	MOVL	EAX, pcdc_id1[EBP]
	SHLL	EAX, #16t
	MOVW	AX, pcdc_id2[EBP]
	MOVL	ac97db_model[ESI], EAX
	MOVL	EAX, #1
	LEAVE
	POPL	ESI
	POPL	EDI
	RET	8t
.PAGE
	.SBTTL	AC97 data

	DATA

	LKEEND
