	.TITLE	$_reqgetpa

;*--------------------------------------------------------------------------*
;* command.m86
;*
;* Written by: John Goltz
;*
;* Edit History:
;*
;*--------------------------------------------------------------------------*

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	xosinc:\xmac\xos.par
	.INCLUD	xosinc:\xmac\xosx.par
	.INCLUD	xosinc:\xmac\xoserr.par
	.INCLUD	geckot.par

	GTCODE


;************************************************
; Function: $_reqgetpa - Handle the GETPA request
; Returned: Nothing
;************************************************

;Request format:
;  Offset Size Description
;     0     4  Virtual address

;Response format:
;  Offset Size Description
;     0     4  Virtual address (echoed)
;     4     4  Physical address

	.ENTRY	$_reqgetpa
$_reqgetpa::
	CMPL	$_reqlength#, #4	;Make sure long enough
	JB	$_badlength#
	PUSHL	#RDMSZ_LONG		;Get a long
	MOVL	EAX, $_dbbufr#+0
	SHRL	EAX, #12t
	LEAL	EAX, pgtable[EAX*4]
	PUSHL	EAX			;Address to read
	PUSHL	#$_dbbufr#+4		;Address of the data buffer
	PUSHL	#1			;Number of items to read
	CALL	$_rdmem#		;Read memory
	MOVL	EDX, #4			;Assume page is not mapped
	CMPL	EAX, EDX		;Did we get the value?
	JNE	4$			;No (Will happen if no page directory)
	TESTB	$_dbbufr#+4, #0x01	;Is the page mapped?
	JE	4$			;No
	ANDL	$_dbbufr#+4, #0xFFFFF000 ;Get just the page address
	MOVL	EAX, $_dbbufr#+0	;Add in the offset in the page
	ANDL	EAX, #0x0FFF
	ORL	$_dbbufr#+4, EAX
	ADDL	EDX, #4
4$:	PUSHL	#DBRQ_GETPA
	PUSHL	EDX
	CALL	$_sendresponse#
	RET

	END
