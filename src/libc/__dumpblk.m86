	.TITLE	__dumpblk - Internal function to output buffer if necessary
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

;Internal function to output buffer if necessary
;	int __dumpblk(
;	    FILE *file);
;  Value returned is 0 if OK or -1 (EOF) if error (errno is set)

db_file=!8

	.ENTRY	__dumpblk
__dumpblk:
	PUSHL	ESI
	MOVL	ESI, db_file[ESP]
	BTL	iob_flag[ESI], #IOB%WRITE ;Output file?
	JNC	14$			;No
	BTL	iob_flag[ESI], #IOB%DIRTY ;Yes - has buffer been changed?
	JNC	14$			;No
	MOVL	ECX, iob_bsize[ESI]	;Yes - calculate amount to write
	MOVL	EDX, iob_count[ESI]
	BTL	iob_flag[ESI], #IOB%DISK ;Is this a disk?
	JNC	4$			;No
	PUSHL	iob_handle[ESI]		;Yes
	MOVL	EAX, iob_offset[ESI]
	PUSHL	EAX
	PUSHL	#0
	CALL	svcIoSetPos#
	TESTL	EAX, EAX
	JS	6$
	CMPL	EDX, iob_endcnt[ESI]
	JLE	6$
	MOVL	EDX, iob_endcnt[ESI]
4$:	SUBL	ECX, EDX
	PUSHL	iob_handle[ESI]
	PUSHL	iob_buffer[ESI]
	PUSHL	ECX
	CALL	svcIoOutBlock#
	CMPL	EAX, ECX		;Did we write it all?
	JE	10$			;Yes
	TESTL	EAX, EAX		;No - incomplete write?
	JS	6$			;No
	MOVL	EAX, #ER_ICMIO		;Yes
6$:	NEGL	EAX			;Make positive for errno
	MOVL	errno#, EAX	
	MOVL	iob_error[ESI], EAX
	MOVL	EAX, #-1
	JMP	20$

;Here with good output

10$:	ADDL	ECX, iob_offset[ESI]	;Calculate new file length
	CMPL	iob_length[ESI], ECX	;Have we lengthed the file?
	JAE	12$			;No
	MOVL	iob_length[ESI], ECX	;Yes - update length
12$:	BTZL	iob_flag[ESI], #IOB%DIRTY ;Block matches disk now
14$:	CLRL	EAX			;Return 0
20$:	POPL	ESI
	RET	4

	.END
