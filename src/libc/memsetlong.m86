	.TITLE	memsetlong - Function to initialize a memory region
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	xosinc:\xmac\xos.par
	.INCLUD	xosinc:\xmac\stdio.par

	.STDSEGS

	.SBTTL	memsetlong - Function to initialize a memory region

;Calling sequence:
;	void *memsetlong(void *pnt, int value, size_t size);
;  Value returned is pnt.

;This function assumes the area to be set is long aligned and that the length
;  is an even multiple of 4. A 32-bit value is stored size/4 times. This
;  function eliminates all of the overhead memset goes through to optimize
;  storing in memory when it is known that the area is well behaved.

msl_pnt=!8t
msl_val=!12t
msl_cnt=!16t

	.PSECT	_TEXT_p

	.ENTRY	memsetlong
memsetlong:
	PUSHL	EDI
	MOVL	ECX, msl_cnt[ESP]	;Get amount to store
	SHRL	ECX, #2			;Change to number of longs
	MOVL	EDI, msl_pnt[ESP]	;Get the address
	MOVL	EAX, DS
	MOVL	ES, EAX
	CLD
	MOVL	EAX, msl_val[ESP]	;Get the value to store
        RSTOSL  [EDI]			;Move data by longwords
	POPL	EDI
	RET

	.END
