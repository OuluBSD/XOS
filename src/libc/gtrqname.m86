	.TITLE	getreqname - Function to process requestor name argument for symbionts
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\CTYPE.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

;Subroutine to process requestor name argument for symbionts
;	char *args;		// Offset of base of argument msect
;	long *reqname;		// Offset of buffer to receive requestor
;				//   name string
;	(char *)pntr = getreqpid(args, reqname);
;  Value returned is offset of character after name argument in the command
;    tail if normal or 0 if error

grqn_args=!12t
grqn_name=!16t

	.ENTRY	getreqname
getreqname:
	PUSHL	EDI
	PUSHL	ESI
	MOVL	ESI, grqn_args[ESP]	;Get address of argument msect
	MOVL	ESI, hum_argsaddr[ESI]	;Get address of argument string
	CLD
2$:	MOVZBL	EAX, [ESI]		;Find first non-whitespace character
	INCL	ESI
	TESTB	_IsTable#+1[EAX], #_SPACE
	JNE	2$
	CMPB	AL, #0
	JE	10$
4$:	MOVZBL	EAX, [ESI]		;Now find first whitespace character
	INCL	ESI			;  (this skips the program name)
	CMPB	AL, #0
	JE	10$
	TESTB	_IsTable#+1[EAX], #_SPACE
	JE	4$
6$:	MOVZBL	EAX, [ESI]		  ;Find first non-whitespace character
	INCL	ESI			  ;  (this gets us to the start of the
	TESTB	_IsTable#+1[EAX], #_SPACE ;  requestor name argument)
	JNE	6$
	MOVL	EDI, grqn_name[ESP]	;Get address of his name buffer
	PUSHL	DS
	POPL	ES
	MOVL	EDX, EDI		;Remember where the buffer starts
	MOVL	ECX, #62t		;Get maximum length allowed
8$:	STOSB	[EDI]			;Store character in the user buffer
	MOVZBL	EAX, [ESI]		;Get next character
	INCL	ESI
	CMPB	AL, #0
	JE	12$
	TESTB	_IsTable#+1[EAX], #_SPACE ;End of name?
	JNE	12$			;Yes
	LOOP	ECX, 8$			;No - continue if room for more
10$:	CLRL	EAX			;Too long - indicate error
	JMP	18$

;Here with end of the name string

12$:	MOVB	[EDI], #0		;Put a null at the end
	TESTL	EAX, EAX		;Stopped by end of string?
	JNE	14$			;No
	DECL	ESI			;Yes - adjust the pointer
14$:	CMPW	[EDX], #'0'		;Is the string just '0'?
	JNE	16$			;No
	MOVB	[EDX], #0		;Yes - make it a null string
16$:	MOVL	EAX, ESI		;Get argument offset to return
18$:	POPL	ESI
	POPL	EDI
	RET

	.END
